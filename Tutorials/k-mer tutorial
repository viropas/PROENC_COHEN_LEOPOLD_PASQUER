#Once you have the histo file we will use R studio to visualize and to plot the data.  
# Using the following command, we will load the data from the kmer_out.histo file in to a data frame called dataframek.

```R
dataframek <- read.table("kmer_out.histo") #load the data into dataframek
plot(dataframek[1:200,], type="l") #plots the data points 1 through 200 in the dataframek using a line
```
# This will create a line graph using the first 200 data points
#In general, very low frequency k-mers represent high numbers that would skew the y â€“axis. If we look at the data points in the histogram file, we can see that the very first data point has a exceptionally high value than the next (second) data point. So we remove just the first line and re-plot using R. From now on we will disregard the first data point for our calculations.

```R
plot(dataframe19[2:200,], type="l")
```
#To determine the cut off points in the single copy region, we need to see the actual data point positions in the graph. In the initial examination the peak starts from the 2nd data point onward. So we will disregard the first data point in determining the single copy region.
#Now using R we will re-plot the graph to determine the single copy region. Then we will include the points for clarity on the same graph.

```R
plot(dataframek[2:100,], type="l") #plot line graph 
points(dataframek[2:100,]) #plot the data points from 2 through 100
```
#You need now to determine the single region copy. This region is located where there are the most variations on the previous graph.
#In our example, this region is between points 6 and 40

#Assuming the total number of data points is known, we can now calculate the total k-mers in the distribution.

```R
sum(as.numeric(dataframe19[2:9325,1]*dataframe19[2:9325,2]))
```
#From the plotted graph we can get an idea where the peak position lies, and it should be between the points 20 and 30 according to our example.
#Now to determine the peak, thus, we need to look at the actual data points in that region

```R
dataframek[20:30,]
```
#In our case, the peak is at 23. So the Genome Size can be estimated as:

```R
sum(as.numeric(dataframek[total number of points execpt first,1]*dataframek[total number of points execpt first,2]))/23
```
#Since we have a nice curve, we can compare our curve to a theoretical curve, which is the Poission distribution.

```R
singleC <- sum(as.numeric(dataframek[6:40,1]*dataframek[6:40,2]))/23
poisdtb <- dpois(1:100,12)*singleC
plot(poisdtb, type='l', lty=2, col="green")
lines(dataframek[1:100,12] * singleC, type = "l", col=3)#, Ity=2)
lines(dataframek[1:100,],type= "l")
```
